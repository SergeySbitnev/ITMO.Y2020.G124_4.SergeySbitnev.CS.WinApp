<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAADjsAAA47AAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAUAAABdAAAAqgAAALwAAAC+AAAAswAAAJsAAAB1AAAAQwAA
        AB4AAAARAAAAEgAAACMAAABLAAAAkwAAANAAAADxAAAA/wAAAPwAAADjAAAAlgAAABoAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAPAAAAugAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA8wAAAOcAAADpAAAA9gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD/AAAA4QAA
        ACYAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAKgAAAD/AAAA+gAAAPwAAAD9AAAA/QAA
        APwAAAD8AAAA/AAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAPwAAAD9AAAA/gAAAP8AAAD/AAAA/gAA
        APkAAAD/AAAAugAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAA3AAAA/wAAAPwAAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD+AAAA/gAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD+AAAALgAAAAAAAAACAAAAAAAAAAAAAAAEAAAAAAAAAIEAAAD/AAAA+wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAAAP8AAABlAAAAAAAAAAQAAAAAAAAAAAAAAAMAAAAAAAAAqwAA
        AP8AAAD8AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAH8AAAAAAAAABAAAAAAAAAAAAAAAAwAA
        AAAAAACoAAAA/wAAAPwAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAbgAAAAAAAAAEAAAAAAAA
        AAAAAAAEAAAAAAAAAHMAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAAAzAAAAAAAA
        AAIAAAAAAAAAAAAAAAEAAAAAAAAAGwAAAOwAAAD/AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPkAAAD/AAAAqQAA
        AAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAYgAAAP8AAAD7AAAA/QAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAA
        AMMAAAAQAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAdAAAAP8AAAD8AAAA/QAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA+wAA
        AP8AAACkAAAABgAAAAEAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAUQAA
        APIAAAD/AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        APsAAAD/AAAAjgAAAAAAAAABAAAAAAAAAAIAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAUAAAAAAAAAMgAAAOUAAAD/AAAA/AAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD7AAAA/wAAAIIAAAAAAAAAAwAAABIAAAATAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAQAA
        AAMAAAAAAAAAAAAAAAgAAAAAAAAAIAAAANoAAAD/AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA+wAAAP8AAACJAAAAAAAAAEoAAADMAAAA7QAAAPAAAADNAAAAPgAAAAAAAAACAAAAAAAA
        AAEAAAACAAAAAAAAAAcAAAAGAAAAAAAAAAUAAAAAAAAAIQAAAOQAAAD/AAAA/QAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPsAAAD/AAAAogAAAAAAAAAwAAAA+QAAAP8AAAD+AAAA/gAAAP8AAADvAAAAHgAA
        AAAAAAABAAAAAAAAAA0AAACWAAAA5AAAAN8AAACcAAAAGAAAAAEAAAAAAAAAQQAAAP4AAAD9AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD7AAAA/wAAAMsAAAAMAAAAAAAAAIUAAAD/AAAA+AAAAP4AAAD+AAAA+AAA
        AP8AAABzAAAAAAAAAAEAAAAAAAAAsQAAAP8AAAD8AAAA/QAAAP8AAADOAAAACQAAAAIAAAAAAAAAiAAA
        AP8AAAD5AAAA/AAAAP4AAAD9AAAA+gAAAP8AAAD1AAAALwAAAAAAAAAAAAAApwAAAP8AAAD8AAAA/wAA
        AP8AAAD7AAAA/wAAAJ4AAAAAAAAAAAAAAEYAAAD/AAAA+gAAAP0AAAD9AAAA+AAAAP8AAABjAAAAAAAA
        AAUAAAADAAAApQAAAP8AAAD9AAAA/wAAAP4AAAD/AAAA9wAAAEwAAAAAAAAABgAAAAAAAACuAAAA/wAA
        APwAAAD/AAAA/wAAAPwAAAD/AAAAqgAAAAAAAAAAAAAAjgAAAP8AAAD7AAAA/wAAAP8AAAD7AAAA/wAA
        AKAAAAAAAAAABAAAAAIAAAAAAAAAWwAAAMYAAADpAAAA5AAAAKgAAAApAAAAAAAAAAMAAAADAAAAAAAA
        AKIAAAD/AAAA+wAAAP8AAAD/AAAA+wAAAP8AAACgAAAAAAAAAAAAAACpAAAA/wAAAPwAAAD/AAAA/wAA
        APwAAAD/AAAAtAAAAAAAAAACAAAAAQAAAAMAAAAAAAAAAAAAAAwAAAAIAAAAAAAAAAEAAAADAAAAAwAA
        AAcAAAAAAAAAewAAAP8AAAD6AAAA/wAAAP8AAAD5AAAA/wAAAGsAAAAAAAAAAAAAAJQAAAD/AAAA+wAA
        AP8AAAD/AAAA/AAAAP8AAACuAAAAAAAAAAYAAAACAAAAAAAAAAcAAAACAAAAAAAAAAAAAAADAAAABQAA
        AAEAAAAAAAAAAgAAAAAAAAAvAAAA+wAAAP8AAAD8AAAA/AAAAP8AAADhAAAAEgAAAAAAAAAAAAAAXgAA
        AP8AAAD7AAAA/wAAAP8AAAD6AAAA/wAAAIEAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAIAAAABAAAAAQAA
        AAEAAAAAAAAADQAAADoAAAAxAAAABgAAAAAAAABsAAAA+wAAAP4AAAD/AAAA2wAAADQAAAAAAAAAAgAA
        AAAAAAAUAAAA6gAAAP8AAAD5AAAA+gAAAP8AAADtAAAAIQAAAAAAAABBAAAAwwAAANkAAAB/AAAABAAA
        AAAAAAADAAAAAAAAAEcAAADoAAAA/wAAAP8AAADFAAAAIAAAAAAAAAAeAAAASQAAADsAAAAJAAAAAAAA
        AAEAAAAAAAAAAwAAAAAAAABjAAAA/wAAAP0AAAD/AAAA+AAAAE8AAAAAAAAAOwAAAPkAAAD/AAAA+wAA
        AP8AAACVAAAAAAAAAAAAAAAUAAAA5wAAAP8AAAD8AAAA/AAAAP8AAADQAAAACwAAAAAAAAABAAAAAAAA
        AAEAAAACAAAAAAAAAAAAAAAAAAAAAgAAAAAAAABDAAAAmwAAAIsAAAAoAAAAAAAAAAAAAAC6AAAA/wAA
        APkAAAD8AAAA/AAAAP8AAAA2AAAAAAAAAFcAAAD/AAAA+gAAAP8AAAD/AAAA+QAAAP8AAAB4AAAAAAAA
        AAcAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAHwAA
        APYAAAD/AAAA/gAAAP8AAAD7AAAA/wAAAIIAAAAAAAAAdwAAAP8AAAD7AAAA/wAAAP8AAAD9AAAA/wAA
        ANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAQAAAAEAAAABQAA
        AAAAAAA/AAAA/wAAAP0AAAD/AAAA/wAAAPsAAAD/AAAAqQAAAAAAAAByAAAA/wAAAPsAAAD/AAAA/wAA
        AP4AAAD/AAAA9AAAABoAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAEEAAAD/AAAA/QAAAP8AAAD/AAAA+wAAAP8AAACqAAAAAAAAAEIAAAD/AAAA/AAA
        AP8AAAD/AAAA/gAAAP8AAADtAAAAEwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAJAAAAPkAAAD/AAAA/wAAAP8AAAD7AAAA/wAAAIUAAAAAAAAAAgAA
        AMMAAAD/AAAA+gAAAP8AAAD6AAAA/wAAALAAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAxgAAAP8AAAD7AAAA/wAAAPwAAAD/AAAAPQAA
        AAAAAAAAAAAAMQAAAPQAAAD/AAAA/QAAAP8AAAD3AAAAMgAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABJAAAA/wAAAP8AAAD8AAAA/wAA
        AKgAAAAAAAAAAQAAAAMAAAAAAAAAPAAAAN0AAAD/AAAA4QAAAEQAAAAAAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAABeAAAA7gAA
        AP8AAACpAAAADQAAAAAAAAABAAAAAAAAAAIAAAAAAAAADgAAADoAAAAQAAAAAAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAoAAAFZAAAAmQAAAJoAAABSAAAAUgAAAFIAAABaAAAAWgAAAJkAAACagA
        AAWEAABCsgAAgUkAAQKSgAIBQEACAUAgBgGAQAoBgEgSAYBEQgGAQYoBgFQhAoBAQIVAgYBSoYCARU0A
        gG8hAIAv8QCAL/0AgE/8gMBP/IEgr/xBUV8=
</value>
  </data>
</root>